#include <stdio.h>
#include <vector>
#include <ctime>
#include <cstdlib>
#include <algorithm>
#include <string>

using namespace std;

//      Huawei: 二进制编辑

//      请实现一个简易二进制编辑器，合法的二进制数字不能有前导0，前导0 定义为：
//      从左向右第一个非 0 数字之前的所有0，或者全 0 数字的最后一个0之前的所有0，
//      合法数字比如有 1101, 0, 1, 非法比如 00, 01
//      初始有一个二进制数字字符串(可能为空), 光标默认在最后一个数字的右侧，需要支持如下操作：
//          0: 在光标位置插入一个数字 0, 光标停留在新插入数字的右侧,如果插入会导致出现前导 0,则不做任何处理
//          1: 在光标位置插入一个数字 1, 如果出现前导 0, 则需要将前导 0 删除，光标停留在新插入数字的右侧。
//          B: 删除光标位置左侧相邻的一个数字，光标左移一位：
//              如果删除后出现前导 0, 则需要将前导 0 删除，光标停留在最左侧
//              例如：1001101，光标在第一个 1 的右侧，进行 B 操作之后，则数字变为 1101
//              如果光标已经在最左侧，则不做任何处理
//          L: 光标左移一位。如果光标已经在最左侧，则不做任何处理。
//          R: 光标右移一位。如果光标已经在最右侧，则不做任何处理。
//      现给出初始二进制数字字符串inputStr, 以及一系列操作cmds,
//      请依次进行编辑操作，最后返回编辑器内的二进制数字字符串。
//      输入：
//          第一个参数 inputStr, 仅由 0 和 1 组成的二进制字符串，或者 空串 “”
//          第二个参数 一系列操作cmds,  cmds[i] 为 0, 1, B, L, R 之一
//          用例保证：(1) 输入不含前导 0
//                   (2) 在整个操作系统中，数字不超过 2000
//      输出：二进制数字字符串，可能为 空串 “”
//      样例1：
//          “10” “0LLB0R1”
//      输出：
//          “1”
//      样例2：
//          “10” “0LLBB1RRRBB”
//      输出：
//          “”

string BinaryEdit(string inputStr, string cmds);